Q.1.Ans:-Conditional statements in JavaScript allow you to control the flow of your program based on certain conditions. The primary conditional statements in JavaScript are the if statement, the if-else statement, and the if-else if-else statement

Syntax and examples:

1. If Statement:
The syntax of an if statement is as follows:

javascript

if (condition) {
    // code to be executed if the condition is true
}
Example in JavaScript:

javascript

let x = 10;

if (x > 5) {
    console.log("x is greater than 5");
}
2. If-Else Statement:
The syntax of an if-else statement is as follows:

javascript

if (condition) {
    // code to be executed if the condition is true
} else {
    // code to be executed if the condition is false
}
Example in JavaScript:

javascript

let y = 3;

if (y % 2 === 0) {
    console.log("y is even");
} else {
    console.log("y is odd");
}
3. If-Else If-Else Statement:
The syntax of an if-else if-else statement is as follows:

javascript

if (condition1) {
    // code to be executed if condition1 is true
} else if (condition2) {
    // code to be executed if condition2 is true
} else {
    // code to be executed if no condition is true
}
Example in JavaScript:

javascript

let z = 0;

if (z > 0) {
    console.log("z is positive");
} else if (z < 0) {
    console.log("z is negative");
} else {
    console.log("z is zero");
}

Q.2.Ans:-Loops in JavaScript are control structures that allow you to repeat a block of code multiple times. They are essential for automating repetitive tasks, iterating over data structures, and streamlining code. There are several types of loops in JavaScript, including for, while, and do-while loops.

1. For Loop:
The for loop is commonly used when you know the number of iterations in advance.

Syntax:

javascript

for (initialization; condition; increment/decrement) {
    // code to be repeated
}
Example:

javascript

for (let i = 0; i < 5; i++) {
    console.log(i); // Outputs 0, 1, 2, 3, 4
}
2. While Loop:
The while loop is used when you don't know the number of iterations in advance, and it continues as long as the specified condition is true.

Syntax:

javascript

while (condition) {
    // code to be repeated
}
Example:

javascript

let i = 0;
while (i < 5) {
    console.log(i); // Outputs 0, 1, 2, 3, 4
    i++;
}
3. Do-While Loop:
The do-while loop is similar to the while loop, but it guarantees that the code inside the loop will execute at least once before checking the condition.

Syntax:

javascript

do {
    // code to be repeated
} while (condition);
Example:

javascript

let i = 0;
do {
    console.log(i); // Outputs 0, 1, 2, 3, 4
    i++;
} while (i < 5);
Example: Using Loops to Iterate Over an Array
javascript

const numbers = [1, 2, 3, 4, 5];

// Using for loop
for (let i = 0; i < numbers.length; i++) {
    console.log(numbers[i]); // Outputs 1, 2, 3, 4, 5
}

// Using forEach method (ES6+)
numbers.forEach(function(number) {
    console.log(number); // Outputs 1, 2, 3, 4, 5
});

// Using for...of loop (ES6+)
for (const number of numbers) {
    console.log(number); // Outputs 1, 2, 3, 4, 5
}